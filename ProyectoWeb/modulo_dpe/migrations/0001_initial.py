# Generated by Django 4.2.4 on 2025-01-04 00:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('modulo_dot', '0036_alter_usuario_usuario_rol'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApoyoGestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_servicio_educativo', models.CharField(max_length=255)),
                ('numero_ec_asignado', models.IntegerField()),
                ('meses_servicio', models.IntegerField()),
                ('monto_apoyo_mensual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('presupuesto_total_periodo', models.DecimalField(decimal_places=2, max_digits=15)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dot.usuario')),
            ],
            options={
                'db_table': 'apoyo_gestion',
            },
        ),
        migrations.CreateModel(
            name='Comunidad',
            fields=[
                ('cv_comunidad', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la comunidad')),
                ('nombre_comunidad', models.CharField(max_length=100, verbose_name='Nombre completo de la comunidad')),
                ('contexto_comunidad', models.CharField(choices=[('Sin asignar', 'Sin asignar'), ('Indígena', 'Indígena'), ('Mestizo', 'Mestizo'), ('Migrante', 'Migrante'), ('Circense', 'Circense'), ('Grupos Vulnerables', 'Grupos Vulnerables'), ('Excluidos del Sistema Regular', 'Excluidos del Sistema Regular')], default='Sin asignar', max_length=255)),
                ('tipo_servicio', models.TextField(verbose_name='Tipo de servicio educativo que se ofrece')),
                ('cantidad_alumnos', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Número de alumnos en la comunidad')),
                ('estatus', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], max_length=8, verbose_name='Estado actual de la comunidad')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Fecha de última actualización')),
            ],
            options={
                'db_table': 'comunidad',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('cv_estado', models.CharField(max_length=5, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única del estado')),
                ('nombre_estado', models.CharField(max_length=100, verbose_name='Nombre completo del estado')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de última actualización')),
            ],
            options={
                'db_table': 'estado',
            },
        ),
        migrations.CreateModel(
            name='ServicioEducativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_comite', models.CharField(default='Nombre comite genérico', max_length=255)),
                ('clave_estado', models.CharField(max_length=255)),
                ('nombre_estado', models.CharField(default='Estado', max_length=255)),
                ('clave_region', models.CharField(max_length=255)),
                ('nombre_region', models.CharField(default='Región', max_length=255)),
                ('clave_microregion', models.CharField(default='Región', max_length=255)),
                ('nombre_microregion', models.CharField(max_length=255)),
                ('clave_comunidad', models.CharField(max_length=255)),
                ('nombre_comunidad', models.CharField(default='Nombre genérico', max_length=255)),
                ('rol_vacante', models.CharField(choices=[('EC', 'Educador Comunitario'), ('ECA', 'Educador Comunitario de Acompañamiento Microrregional'), ('ECAR', 'Educador Comunitario de Acompañamiento Regional')], default='EC', max_length=10)),
                ('tipo_servicio', models.CharField(choices=[('Sin asignar', 'Sin asignar'), ('Inicial', 'Inicial'), ('Preescolar', 'Preescolar'), ('Primaria', 'Primaria'), ('Secundaria', 'Secundaria'), ('Postsecundaria', 'Postsecundaria')], default='Sin asignar', max_length=255)),
                ('clave_centro_trabajo', models.CharField(blank=True, max_length=100, null=True)),
                ('nivel_educativo', models.CharField(choices=[('APEC', 'APEC'), ('APEC-INI', 'APEC-INI')], max_length=255)),
                ('contexto', models.CharField(choices=[('Sin asignar', 'Sin asignar'), ('Indígena', 'Indígena'), ('Mestizo', 'Mestizo'), ('Migrante', 'Migrante'), ('Circense', 'Circense'), ('Grupos Vulnerables', 'Grupos Vulnerables'), ('Excluidos del Sistema Regular', 'Excluidos del Sistema Regular')], default='Sin asignar', max_length=255)),
                ('periodo_servicio', models.CharField(choices=[('sin asignar', 'sin asignar'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026')], default='sin asignar', max_length=255)),
                ('alumnos_hombres', models.IntegerField()),
                ('alumnos_mujeres', models.IntegerField()),
                ('alumnos_total', models.IntegerField(editable=False)),
                ('apoyo_gestion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dpe.apoyogestion')),
                ('comunidad_servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dpe.comunidad')),
            ],
            options={
                'db_table': 'servicio_educativo',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('cv_region', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la región')),
                ('nombre_region', models.CharField(max_length=100, verbose_name='Nombre completo de la región')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de última actualización')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regiones', to='modulo_dpe.estado', verbose_name='Estado al que pertenece')),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dot.usuario')),
            ],
            options={
                'db_table': 'region',
            },
        ),
        migrations.CreateModel(
            name='Observacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateField(blank=True, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
                ('candidatos', models.ManyToManyField(blank=True, related_name='observaciones', to='modulo_dot.usuario')),
                ('servicio_educativo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dpe.servicioeducativo')),
            ],
            options={
                'db_table': 'observacion',
            },
        ),
        migrations.CreateModel(
            name='Microrregion',
            fields=[
                ('cv_microrregion', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la microrregión')),
                ('nombre_microrregion', models.CharField(max_length=100, verbose_name='Nombre completo de la microrregión')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de última actualización')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='microrregiones', to='modulo_dpe.region', verbose_name='Región a la que pertenece')),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dot.usuario')),
            ],
            options={
                'db_table': 'microrregion',
            },
        ),
        migrations.AddField(
            model_name='comunidad',
            name='microrregion',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='comunidades', to='modulo_dpe.microrregion', verbose_name='Microrregión a la que pertenece'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='usuario',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dot.usuario'),
        ),
    ]
