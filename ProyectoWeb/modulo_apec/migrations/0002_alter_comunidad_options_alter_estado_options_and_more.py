# Generated by Django 4.2.4 on 2024-12-29 05:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('modulo_apec', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='comunidad',
            options={},
        ),
        migrations.AlterModelOptions(
            name='estado',
            options={},
        ),
        migrations.AlterModelOptions(
            name='microrregion',
            options={},
        ),
        migrations.AlterModelOptions(
            name='region',
            options={},
        ),
        migrations.RemoveField(
            model_name='comunidad',
            name='cv_microrregion',
        ),
        migrations.RemoveField(
            model_name='microrregion',
            name='cv_region',
        ),
        migrations.RemoveField(
            model_name='region',
            name='cv_estado',
        ),
        migrations.AddField(
            model_name='comunidad',
            name='created_at',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Fecha de creación'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='microrregion',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='comunidades', to='modulo_apec.microrregion', verbose_name='Microrregión a la que pertenece'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='updated_at',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Fecha de última actualización'),
        ),
        migrations.AddField(
            model_name='estado',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación'),
        ),
        migrations.AddField(
            model_name='estado',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de última actualización'),
        ),
        migrations.AddField(
            model_name='microrregion',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación'),
        ),
        migrations.AddField(
            model_name='microrregion',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='microrregiones', to='modulo_apec.region', verbose_name='Región a la que pertenece'),
        ),
        migrations.AddField(
            model_name='microrregion',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de última actualización'),
        ),
        migrations.AddField(
            model_name='region',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de creación'),
        ),
        migrations.AddField(
            model_name='region',
            name='estado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regiones', to='modulo_apec.estado', verbose_name='Estado al que pertenece'),
        ),
        migrations.AddField(
            model_name='region',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de última actualización'),
        ),
        migrations.AlterField(
            model_name='comunidad',
            name='cantidad_alumnos',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Número de alumnos en la comunidad'),
        ),
        migrations.AlterField(
            model_name='comunidad',
            name='cv_comunidad',
            field=models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la comunidad'),
        ),
        migrations.AlterField(
            model_name='comunidad',
            name='id_ec',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Identificador del responsable EC asignado'),
        ),
        migrations.AlterField(
            model_name='estado',
            name='cv_estado',
            field=models.CharField(max_length=5, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única del estado'),
        ),
        migrations.AlterField(
            model_name='microrregion',
            name='cv_microrregion',
            field=models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la microrregión'),
        ),
        migrations.AlterField(
            model_name='microrregion',
            name='id_eca',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Identificador del responsable ECA asignado'),
        ),
        migrations.AlterField(
            model_name='region',
            name='cv_region',
            field=models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la región'),
        ),
        migrations.AlterField(
            model_name='region',
            name='id_ecar',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Identificador del responsable ECAR asignado'),
        ),
        migrations.AlterModelTable(
            name='comunidad',
            table='comunidad',
        ),
        migrations.AlterModelTable(
            name='estado',
            table='estado',
        ),
        migrations.AlterModelTable(
            name='microrregion',
            table='microrregion',
        ),
        migrations.AlterModelTable(
            name='region',
            table='region',
        ),
    ]
